version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: portfolio-mongodb-prod
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-portfolio123}
      MONGO_INITDB_DATABASE: portfolio
    ports:
      - "127.0.0.1:27017:27017" # Bind to localhost only for security
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - portfolio-network
    command: --bind_ip_all --replSet=rs0
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application
  portfolio-app:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    container_name: portfolio-nextjs-prod
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://root:${MONGO_ROOT_PASSWORD:-portfolio123}@mongodb:27017/portfolio?authSource=admin
      - NEXT_PUBLIC_APP_URL=https://www.tumrabert.com
    ports:
      - "3000:3000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - portfolio-network
    volumes:
      - ./logs:/app/logs # Log directory for debugging
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/portfolio"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy with SSL
  nginx:
    image: nginx:alpine
    container_name: portfolio-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-available:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - portfolio-app
    networks:
      - portfolio-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: portfolio-redis-prod
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - portfolio-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  portfolio-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local